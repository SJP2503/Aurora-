name: Aurora Pipeline â€“ PR-based Data Updates (Hardened)

on:
  schedule:
    - cron: '0 1 * * *'   # daily at 01:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  scrape-and-pr:
    runs-on: ubuntu-latest

    steps:
      # 0) Git + repo hygiene (prevents exit 128 from "dubious ownership")
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: true
          fetch-depth: 0

      - name: Configure git for Actions
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"

      - name: Prepare folders
        run: |
          mkdir -p data/input data/coa data/procurement data/comelec data/courts data/dbm saln_meta tools

      # R runtime + deps
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rvest
            any::dplyr
            any::stringr
            any::janitor
            any::readr
            any::purrr
            any::jsonlite
            any::digest
            any::httr
            any::lubridate

      # Python for risk emitter
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install requests pydantic

      # ---- Scrapers / normalizers (best-effort; don't kill the run) ----
      - name: Legislators (House + Senate)
        run: Rscript R/fetch_ph_legislators.R
        continue-on-error: true

      - name: SALN metadata
        run: Rscript R/fetch_saln_metadata.R
        continue-on-error: true

      - name: PNP
        run: Rscript R/fetch_pnp_data.R
        continue-on-error: true

      - name: COA findings
        run: Rscript R/coa_findings.R
        continue-on-error: true

      - name: PhilGEPS awards
        run: Rscript R/philgeps_awards.R
        continue-on-error: true

      - name: COMELEC SOCE
        run: Rscript R/comelec_soce.R
        continue-on-error: true

      - name: Courts (Ombudsman / SB / SC / CA)
        run: Rscript R/court_cases.R
        continue-on-error: true

      - name: DBM releases
        run: Rscript R/dbm_releases.R
        continue-on-error: true

      # Risk feed (safe if not configured)
      - name: Emit risk events to Aurora
        env:
          AURORA_API_URL: ${{ secrets.AURORA_API_URL }}
          AURORA_API_TOKEN: ${{ secrets.AURORA_API_TOKEN }}
        run: |
          python tools/emit_risk.py || echo "[emit_risk] skipping (no API configured)"
        continue-on-error: true

      # ---- PR-based update (no direct push; avoids 403) ----
      - name: Create pull request with data updates
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[auto] Update data (Legislators/SALN/PNP/COA/PhilGEPS/COMELEC/Courts/DBM)"
          branch: data/auto-update
          branch-suffix: timestamp            # avoids branch name collisions
          delete-branch: true
          signoff: true
          committer: github-actions <actions@github.com>
          author: github-actions <actions@github.com>
          title: "Automated data update"
          body: |
            This PR contains automated data updates produced by the Aurora pipeline.
            Review diffs and merge when ready.
          labels: data-update, automated
          add-paths: |
            data/**
            saln_meta/**

      - name: PR URL
        if: always()
        run: |
          echo "Pull Request: ${{ steps.cpr.outputs.pull-request-url || 'no changes (no PR created)' }}"

      # Minimal debug if anything still fails
      - name: Session info on failure
        if: failure()
        run: |
          Rscript -e 'sessionInfo()' || true
          echo "--- git remotes ---"; git remote -v || true
          echo "--- repo tree ---"; ls -R || true
